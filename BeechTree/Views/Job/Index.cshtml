@model BeechTree.Models.PagedList<BeechTree.Models.Job>
@{
    ViewBag.Title = "Job List";
}

<h1>Job List</h1>
<div class="well">
    @using (Html.BeginForm("index", null, FormMethod.Get))
    {
        <div class="row">
            <div class="col-sm-4">
                <div class="input-group">

                    <input type="text"
                           name="filter"
                           value="@ViewBag.filter"
                           class="form-control"
                           style="display: inline"
                           placeholder="Search by job number" />
                    <span class="input-group-btn">
                        <button class="btn btn-default" type="submit">Go</button>
                    </span>

                </div>
            </div>
            <div class="col-sm-5"></div>
            <div class="pull-right col-lg-1">
                <a class="btn btn-success" data-modal="" href="/Phone/Create" id="btnCreate">
                    <span class="glyphicon glyphicon-plus"></span>
                </a>
            </div>
        </div>

        <div style="margin-top:17px;">
            @{
                var grid = new WebGrid(
                            canPage: true,
                            rowsPerPage: Model.PageSize,
                            canSort: true,
                            ajaxUpdateContainerId: "grid");

                grid.Bind(Model.Content, rowCount: Model.TotalRecords, autoSortAndPage: false);
                grid.Pager(WebGridPagerModes.All);

                @grid.GetHtml(htmlAttributes: new { ajaxUpdateContainerId = "grid" },   // id for ajaxUpdateContainerId parameter
            fillEmptyRows: false,
            tableStyle: "table table-bordered table-hover",
            mode: WebGridPagerModes.All,
            columns: grid.Columns(
              grid.Column("Id"),
              grid.Column("JobNo", "Job#"),
              grid.Column(header: "Action", canSort: false, style: "action",
                format: @<text>
                @Html.Raw("<a data-modal='' href='/job/shifts/" + item.Id + "' id='" + item.Id + "' title='Shifts'> <span class='glyphicon glyphicon-align-justify'> </span> </a>")
                @Html.Raw("<a data-modal='' href='/job/employees/" + item.Id + "' id='" + item.Id + "' title='Employees'> <span class='glyphicon glyphicon-user'> </span> </a>")
                @Html.Raw("<a data-modal='' href='/job/equipments/" + item.Id + "' id='" + item.Id + "' title='Equipment'> <span class='glyphicon glyphicon-wrench'> </span> </a>")
                @Html.Raw("<a data-modal='' href='/job/invoice/" + item.Id + "' id='" + item.Id + "' title='Invoice'> <span class='glyphicon glyphicon-list-alt'> </span> </a>")
                </text>)

            ));
            }


        </div>
                }
</div>


<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/scripts/appjs/phones.js")
}
